{"ast":null,"code":"/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","map":{"version":3,"names":["baseTimes","n","iteratee","index","result","Array","module","exports"],"sources":["C:/Users/erick/Documents/GitHub/harnwebforge/node_modules/lodash/_baseTimes.js"],"sourcesContent":["/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n  var index = -1,\r\n      result = Array(n);\r\n\r\n  while (++index < n) {\r\n    result[index] = iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseTimes;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,CAAnB,EAAsBC,QAAtB,EAAgC;EAC9B,IAAIC,KAAK,GAAG,CAAC,CAAb;EAAA,IACIC,MAAM,GAAGC,KAAK,CAACJ,CAAD,CADlB;;EAGA,OAAO,EAAEE,KAAF,GAAUF,CAAjB,EAAoB;IAClBG,MAAM,CAACD,KAAD,CAAN,GAAgBD,QAAQ,CAACC,KAAD,CAAxB;EACD;;EACD,OAAOC,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,SAAjB"},"metadata":{},"sourceType":"script"}